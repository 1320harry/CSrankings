name: Commit Validation

on:
  pull_request_target:
    types: [opened, synchronize]

permissions:
  pull-requests: read
  contents: read

jobs:
  commit_validation:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Generate diff.json from PR using GitHub API
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_EVENT_NUMBER: ${{ github.event.number }}
        run: |
          python3 <<EOF
          import os
          import json
          import requests

          repo = os.environ["GITHUB_REPOSITORY"]
          pr_number = os.environ["GITHUB_EVENT_NUMBER"]
          token = os.environ["GITHUB_TOKEN"]
          headers = {"Authorization": f"Bearer {token}"}
          diff_url = f"https://api.github.com/repos/{repo}/pulls/{pr_number}/files"

          print(f"Fetching: {diff_url}")
          response = requests.get(diff_url, headers=headers)
          response.raise_for_status()
          files = response.json()

          output = {"files": []}

          for f in files:
              filename = f["filename"]
              patch = f.get("patch")
              if not patch or not filename.endswith(".csv"):
                  continue

              lines = patch.splitlines()
              changes = []

              for line in lines:
                  if line.startswith("+") and not line.startswith("+++"):
                      changes.append({"type": "AddedLine", "content": line[1:]})
                  elif line.startswith("-") and not line.startswith("---"):
                      changes.append({"type": "DeletedLine", "content": line[1:]})

              if changes:
                  output["files"].append({
                      "path": filename,
                      "chunks": [{"changes": changes}]
                  })

          with open("diff.json", "w") as f:
              json.dump(output, f, indent=2)
          EOF

      - name: Run CSV + OpenAI validation
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python3 validate_commit.py diff.json

  upload:
    runs-on: ubuntu-latest
    needs: commit_validation
    steps:
      - name: Save PR number
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: |
          mkdir -p ./pr
          echo $PR_NUMBER > ./pr/pr_number.txt
      - uses: actions/upload-artifact@v4
        with:
          name: pr_number.txt
          path: pr/
